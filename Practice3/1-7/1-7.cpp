/*
	Практична робота 3
	ПОБІТОВІ ОПЕРАЦІЇ
1) Визначити значення виразу, якщо x = 3, y = 2, z = 1
а) x | y & z;
	б) x | y & ~z;
	в) x ^ y & ~z;
	г) x & y && z.
2) Визначити значення виразу, якщо x = 1
	а) !x | x;
	б) ~x | x;
	в) x ^ x;
	г) x << 3.
3) Визначити значення виразу, якщо x = 5, y = 6, z = 7
	x & y | z.
4)  Нехай  х = 9. Знайти чому буде дорівнювати
	а) x << 3;
	б) x >> 3;
	в) x >> 5.
5) Нехай х = 255. Знайти чому буде дорівнювати х після
послідовного виконання наступних операцій
	а) х = x << 3;
	б) x = х >> 3.
6) Для х = 7, для числа, представленого як беззнаковий
однобайтовий тип виконати послідовність операцій
	x = 7;
	x = x << 1;
	x = x << 3;
	x = x << 2;
	x = x >> 1;
	x = x >> 2.
7) Для х = 7, для числа, представленого як знаковий
однобайтовий тип виконати ту саму послідовність операцій,
що і в п.6
*/
#include <iostream>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Ukrainian");
	{// 1
		/*int x = 3;
		int y = 2;
		int z = 1;*/
		// більш наочний спосіб оголошення змінних:
		uint8_t x = 0b00000011;	// 3
		uint8_t y = 0b00000010;	// 2
		uint8_t z = 0b00000001;	// 1
		// 1 a)
		printf("1 a) %d \n", x | y & z);		//3
		//                     2   1
		// 1 б)
		printf("1 б) %d \n", x | y & ~z);		//3
		//                     3   2 1
		// 1 в)
		printf("1 в) %d \n", x ^ y & ~z);		//1
		//                     3   2 1
		// 1 г)
		printf("1 г) %d \n", x & y && z);		//1
		//                     1    2
		// 1 г) другий варіант друку результату
		x = x & y && z;
		printf("1 г) %s \n", x ? "true" : "false"); //true
	}
	{// 2
		int x = 1;
		// 2 a)
		printf("2 a) %d \n", !x | x);		//1
		//                   1  2
		// 2 б)
		printf("2 б) %d \n", ~x | x);		//-1
		//                   1  2
		// 2 в)
		printf("2 в) %d \n", x ^ x);		//0
		// 2 г)
		printf("2 г) %d \n", x << 3);		//8
	}

	{// 3)
		int x = 5, y = 6, z = 7;			//7
		printf("3) x = %d \n", x & y | z);
		//                       1   2
	}
	{// 4
		int x = 9;
		// 4 a)
		printf("4 a) %d \n", x << 3);		//72
		// 4 б)
		printf("4 б) %d \n", x >> 3);		//1
		// 4 в)
		printf("4 в) %d \n", x >> 5);		//0
	}
	{// 5
		int8_t x = 52;
		// 5 a)
		x = x << 3;
		printf("5 a) %d \n", x);			//-96
		// 5 б)
		x = x >> 3;
		printf("4 б) %d \n", x);			//-12
	}
	{// 6
		uint8_t  x;
		x = 7;
		x = x << 1; printf("x = %d \n", x);	//14
		x = x << 3; printf("x = %d \n", x);	//112
		x = x << 2; printf("x = %d \n", x);	//192
		x = x >> 1; printf("x = %d \n", x);	//96
		x = x >> 2; printf("x = %d \n", x);	//24
	}

	{// 7
		int8_t x;
		x = 7;
		x = x << 1; printf("x = %d \n", x);	//14
		x = x << 3; printf("x = %d \n", x);	//112
		x = x << 2; printf("x = %d \n", x);	//-64
		x = x >> 1; printf("x = %d \n", x);	//-32
		x = x >> 2; printf("x = %d \n", x);	//-8
	}

	return 0;
}
